pipeline:
  name: Harness-2.0
  identifier: Harness20
  projectIdentifier: nodejspipeline
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: git_new
        repoName: harness-2.0
        build:
          type: branch
          spec:
            branch: feature
  stages:
    - stage:
        name: CI-build
        identifier: CIbuild
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: gkeconnector
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - parallel:
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: BuildAndPushDockerRegistry_1
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: Dockerconnector
                        repo: docker.io/prajwaltelkar14/harness-new-2.0
                        tags:
                          - latest
                        dockerfile: Dockerfile
                        context: ./
                        resources:
                          limits:
                            memory: 500Mi
                            cpu: 400m
                  - step:
                      type: RunTests
                      name: RunTests_1
                      identifier: RunTests_1
                      spec:
                        connectorRef: Dockerconnector
                        image: prajwaltelkar14/harness-new-2.0:latest
                        language: Python
                        buildTool: Unittest
                        runOnlySelectedTests: true
                        preCommand: npm install
                        postCommand: npm test
                        enableTestSplitting: false
    - stage:
        name: Deploy_to_GKE
        identifier: Deploy_to_GKE
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: nodejsservice
            gitBranch: feature
          environment:
            environmentRef: Dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: testingenv
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
